"use strict";var e=require("react");const n=/*#__PURE__*/e.createContext(void 0);let o=()=>e.useContext(n);function t(e,n,o,...t){for(let r of e.current[n][o])r(...t)}exports.PrivyEventsContext=n,exports.emitPrivyEvent=t,exports.privyEventsDefault={login:{onComplete:[],onError:[],onOAuthLoginComplete:[]},logout:{onSuccess:[]},connectWallet:{onSuccess:[],onError:[]},createWallet:{onSuccess:[],onError:[]},linkAccount:{onSuccess:[],onError:[]},update:{onSuccess:[],onError:[]},configureMfa:{onMfaRequired:[]},setWalletPassword:{onSuccess:[],onError:[]},setWalletRecovery:{onSuccess:[],onError:[]},signMessage:{onSuccess:[],onError:[]},signTypedData:{onSuccess:[],onError:[]},sendTransaction:{onSuccess:[],onError:[]},sendSolanaTransaction:{onSuccess:[],onError:[]},accessToken:{onAccessTokenGranted:[],onAccessTokenRemoved:[]},oAuthAuthorization:{onOAuthTokenGrant:[]},fundWallet:{onUserExited:[]},fundSolanaWallet:{onUserExited:[]},customAuth:{onAuthenticated:[],onUnauthenticated:[]}},exports.useEmitPrivyEvent=function(){let e=o();return(n,o,...r)=>t(e,n,o,...r)},exports.usePrivyEventSubscription=function(n,t){if(!t)return;let r=o().current[n];return e.useEffect((()=>{for(let[e,o]of Object.entries(t))r.hasOwnProperty(e)||console.warn(`Invalid event type "${e}" for action "${n}"`),r[e]?.push(o);return()=>{for(let[e,o]of Object.entries(t))r.hasOwnProperty(e)||console.warn(`Invalid event type "${e}" for action "${n}"`),r[e]=r[e]?.filter((e=>e!==o))}}),[t])};
