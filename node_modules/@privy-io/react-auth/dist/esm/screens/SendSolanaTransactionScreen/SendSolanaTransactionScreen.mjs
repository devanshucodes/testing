import{jsx as o}from"react/jsx-runtime";import{useState as n,useEffect as t}from"react";import{getPrivyPrimaryWallet as e,getEntropyDetailsFromAccount as r}from"../../client/user.mjs";import{useAppConfig as i}from"../../configuration/context.mjs";import{sendSolanaTransaction as s}from"../../embedded-wallets/solana/transaction.mjs";import{usePrivyInternal as a}from"../../hooks/internal-context.mjs";import{usePrivyModal as c}from"../../hooks/modal-context.mjs";import{usePrivyContext as m}from"../../hooks/privy-context.mjs";import{useGetSolPrice as p}from"../../hooks/useGetSolPrice.mjs";import{getSolanaNetworkFromRpcEndpoint as l}from"../../lib/solana/index.mjs";import{decodeSolanaTransaction as d,getNativeCurrencyFromLamports as u,getDollarsFromLamport as h,isVersionedTransaction as j,createSolanaTransactionReceipt as f}from"../../lib/solana/transaction.mjs";import{ErrorScreenView as g}from"../ErrorScreen.mjs";import{SendTransactionScreenView as y}from"../SendTransactionScreen/SendTransactionScreenView.mjs";import{TransactionErrorView as S}from"../SendTransactionScreen/TransactionErrorView.mjs";import{ModalScreen as T}from"../index.mjs";import{SolanaTransactionReceiptView as b}from"./SolanaTransactionReceiptView.mjs";import"@ethersproject/address";import"../../config.mjs";import"../../configuration/defaultClientConfig.mjs";import"../../constants.mjs";import"../../configuration/login-methods.mjs";import"../../configuration/wallets.mjs";import"../../connectors/chains/index.mjs";import"../../connectors/chains/arbitrum.mjs";import"../../connectors/chains/arbitrumSepolia.mjs";import"../../connectors/chains/avalanche.mjs";import"../../connectors/chains/avalancheFuji.mjs";import"../../connectors/chains/base.mjs";import"../../connectors/chains/baseSepolia.mjs";import"../../connectors/chains/berachainArtio.mjs";import"../../connectors/chains/celo.mjs";import"../../connectors/chains/celoAlfajores.mjs";import"../../connectors/chains/filecoin.mjs";import"../../connectors/chains/filecoinCalibration.mjs";import"../../connectors/chains/garnetHolesky.mjs";import"../../connectors/chains/holesky.mjs";import"../../connectors/chains/linea.mjs";import"../../connectors/chains/lineaTestnet.mjs";import"../../connectors/chains/lukso.mjs";import"../../connectors/chains/mainnet.mjs";import"../../connectors/chains/optimism.mjs";import"../../connectors/chains/optimismSepolia.mjs";import"../../connectors/chains/polygon.mjs";import"../../connectors/chains/polygonAmoy.mjs";import"../../connectors/chains/redstone.mjs";import"../../connectors/chains/sepolia.mjs";import"../../connectors/chains/zora.mjs";import"../../connectors/chains/zoraSepolia.mjs";import"../../connectors/chains/zoraTestnet.mjs";import"../../connectors/chains/utils.mjs";import"../../theme.mjs";import"tinycolor2";import"../../lib/cybr53.mjs";import"../../utils/buffer/readBigInt64LE.mjs";import"../../hooks/index.mjs";import"../../components/PrefetchedImage.mjs";import"@heroicons/react/24/outline/ExclamationTriangleIcon";import"@heroicons/react/24/outline/PhoneIcon";import"styled-components";import"../../components/Button.mjs";import"../../components/Loader.mjs";import"../../components/CircleBorder.mjs";import"../../components/ModalHeader.mjs";import"@heroicons/react/24/outline/ArrowLeftIcon";import"@heroicons/react/24/outline/ArrowRightIcon";import"@heroicons/react/24/outline/QuestionMarkCircleIcon";import"@heroicons/react/24/outline/XMarkIcon";import"../../components/layout/StackedContainer.mjs";import"../../embedded-wallets/errors.mjs";import"../../embedded-wallets/types.mjs";import"../../errors.mjs";import"ofetch";import"../../hooks/captcha-context.mjs";import"../../utils/index.mjs";import"@ethersproject/providers";import"../../connectors/get-legacy-injected-providers.mjs";import"../../connectors/is-wallet-installed.mjs";import"../../svg/lock-closed.mjs";import"@heroicons/react/24/outline";import"../../components/ModalFooter.mjs";import"../../svg/protected-by-privy.mjs";import"../../components/ui/layout/Row.mjs";import"../../components/ui/typography/ErrorMessage.mjs";import"../../components/ui/typography/LabelSm.mjs";import"../../components/ui/typography/Subtitle.mjs";import"../../components/ui/typography/Title.mjs";import"../../components/ui/typography/Value.mjs";import"../../components/ui/animation/LoadingSkeleton.mjs";import"../../components/ui/wallet/Address.mjs";import"@heroicons/react/24/outline/CheckIcon";import"@heroicons/react/24/outline/Square2StackIcon";import"../../components/ui/wallet/WalletInfoCard.mjs";import"../../components/ui/chips/Chip.mjs";import"../../components/ui/layout/Column.mjs";import"../../components/ui/typography/LabelXs.mjs";import"../../components/ui/wallet/shared.mjs";import"../LandingScreen/styles.mjs";import"../SendTransactionScreen/TransactionDetail.mjs";import"../SendTransactionScreen/useTransactionDetails.mjs";import"@heroicons/react/24/outline/ClipboardDocumentCheckIcon";import"@heroicons/react/24/outline/ClipboardDocumentIcon";import"@heroicons/react/24/outline/ExclamationCircleIcon";import"../SendTransactionScreen/EthersTransactionError.mjs";import"@ethersproject/logger";import"@heroicons/react/24/outline/CheckCircleIcon";import"../../components/CircleBackground.mjs";import"../../components/Layouts.mjs";import"../../components/ScreenHeader.mjs";import"../../components/embedded-wallets/SolanaTransactionDetails.mjs";import"@heroicons/react/24/outline/ChevronDownIcon";import"../../components/embedded-wallets/PriceDisplay.mjs";import"../../lib/ethers.mjs";import"@ethersproject/bignumber";import"@ethersproject/units";import"../../ethers-Cz-frLvN.mjs";import"../../components/embedded-wallets/WalletLink.mjs";const I=()=>{let{data:I,onUserCloseViaDialogOrKeybindRef:k,setModalData:w,navigate:C}=c(),{closePrivyModal:x,walletProxy:v}=a(),E=i(),{user:O,getAccessToken:L}=m(),[A,D]=n(I?.sendSolanaTransaction?.transactionRequest),[B,P]=n(),[F,M]=n(),[V,R]=n(0),[H,W]=n(!1),[N,U]=n(),[q,z]=n(null),_=I?.sendSolanaTransaction?.connection,G=I?.sendSolanaTransaction?.transactingWallet,X=B?.instructions.at(V),K=B?.instructions.length??1,Q=l(_?.rpcEndpoint||""),$=e(O);if(t((()=>{!async function(){if(A&&_)try{M(void 0);let o=await d(A,_);P(o),R(0)}catch(o){console.warn("Failed to prepare transaction",o),M(o)}}()}),[A,_]),!(A&&I?.sendSolanaTransaction&&G&&_)){let n=Error("Invalid transaction request");/*#__PURE__*/return o(g,{error:n,onClick:()=>{I?.sendSolanaTransaction?.onFailure(n),x({shouldCallAuthOnSuccess:!1})}})}let{solPrice:J,isSolPriceLoading:Y}=p(),Z=()=>{if(!H)return N?I?.sendSolanaTransaction?.onSuccess(N):(I?.sendSolanaTransaction?.onFailure(q??F??Error("User exited the modal before submitting the transaction")),R(0)),x({shouldCallAuthOnSuccess:!1})};k.current=Z;let oo="fiat-currency"===E.embeddedWallets.priceDisplay.primary,no=I.sendTransaction?.uiOptions?.transactionInfo?.title||("approve"===X?.action?"Confirm address":"Approve transaction"),to=I.sendTransaction?.uiOptions?.description||`${E.name} wants your permission to approve the following transaction.`,eo=I.sendTransaction?.uiOptions?.transactionInfo?.contractInfo?.imgUrl?/*#__PURE__*/o("img",{src:I.sendTransaction.uiOptions.transactionInfo.contractInfo.imgUrl,alt:I.sendTransaction.uiOptions.transactionInfo.contractInfo.imgAltText}):null,ro=X?.amount||0n,io=0===V&&B?.fees||0n,so=X?.balance||0n,ao=X?.to,co=ro+io,mo=u(co),po=oo&&J?h(co,J):void 0,lo=io?u(io):void 0,uo=oo&&J?h(io,J):void 0,ho=so?u(so):void 0,jo=oo&&J?h(so,J):void 0,fo=!F&&!X?.hasFunds,go=!!(I.funding&&I.funding.supportedOptions.length>0),yo=fo&&go,So=yo?"Add funds":I.sendTransaction?.uiOptions?.buttonText||"Approve";return N?/*#__PURE__*/o(b,{instructions:B?.instructions.map((({from:o,to:n,amount:t})=>({from:o?.toBase58(),to:n?.toBase58(),amount:t})))??[],fees:0===V?N.fees:0n,onClose:Z,transactionInfo:I.sendTransaction?.uiOptions.transactionInfo,solPrice:J,receiptHeader:I.sendTransaction?.uiOptions.successHeader,receiptDescription:I.sendTransaction?.uiOptions.successDescription,rpcEndpoint:_.rpcEndpoint}):q?/*#__PURE__*/o(S,{transactionError:q,connection:_,onClose:Z,network:"solana",onRetry:async()=>{z(null);let{blockhash:o}=await _.getLatestBlockhash();j(A)?A.message.recentBlockhash=o:A.recentBlockhash=o,D(A)}}):/*#__PURE__*/o(y,{isSubmitting:H,submitError:q,isPreparing:!B,isTokenPriceLoading:Y,isTokenContractInfoLoading:!1,symbol:"SOL",chain:void 0,img:eo,title:no,subtitle:to,from:G.address||"",to:ao?.toBase58(),fee:uo??lo,total:null!=ro?po??mo:void 0,txValue:ro,spender:X?.spender?.toBase58(),network:Q,cta:So,missingFunds:fo,action:X?.action,balance:jo??ho,prepareError:F,chainName:"Solana",onClose:Z,onClick:yo?async()=>{if(!G)return;if(!go)throw Error("Funding wallet is not enabled");let o=T.FUNDING_METHOD_SELECTION_SCREEN;w({...I,funding:{...I.funding,methodScreen:o}}),C(o)}:async()=>{if(V<(B?.instructions.length??1)-1)R(V+1);else try{W(!0);let o=await L();if(H||!o||!G||!v||!O||!$)return;let{entropyId:n,entropyIdVerifier:t}=r($),{signature:e,receipt:i}=await s({tx:A,accessToken:o,connection:_,walletProxy:v,entropyId:n,entropyIdVerifier:t,transactingWalletAddress:G.address,transactingWalletIndex:G.walletIndex??0,transactionOptions:I.sendSolanaTransaction?.transactionOptions});U(f(e,i))}catch(o){console.warn({transaction:A,error:o}),z(o)}finally{W(!1)}},isSponsored:!1,transactionIndex:V,maxIndex:K-1,disabled:fo&&!go,onBack:V>0&&K>1?()=>R(V-1):void 0})};export{I as SendSolanaTransactionScreen};
