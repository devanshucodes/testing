import{isWalletAdapterCompatibleStandardWallet as t}from"@solana/wallet-adapter-base";import{StandardWalletAdapter as e}from"@solana/wallet-standard-wallet-adapter-base";import{getWallets as r}from"@wallet-standard/app";import{SolanaWalletConnector as o}from"./index.mjs";import"../../hooks/index.mjs";import"../../types.mjs";import"../base.mjs";import"eventemitter3";import"../errors.mjs";import"@ethersproject/logger";import"../../errors.mjs";import"ofetch";import"../../errors-9ucGZPEs.mjs";const m=t=>{let e,{get:m,on:a}=r(),s=t?.shouldAutoConnect??!0,n=p(m()),l=n.map((t=>new o(t,s))),i=[];return{_setOnConnectorsUpdated:t=>{e=t},onMount:()=>{i.push(a("register",((...t)=>{l=(n=n.concat(...p(t))).map((t=>new o(t,s))),e?.(l)})),a("unregister",((...t)=>{l=(n=n.filter((e=>t.some((t=>e.wallet===t))))).map((t=>new o(t,s))),e?.(l)})))},onUnmount:()=>{let t=i.pop();for(;t;)t(),t=i.pop()},get:()=>l}};let p=r=>r.filter(t).map((t=>new e({wallet:t})));export{m as toSolanaWalletConnectors};
