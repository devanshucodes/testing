import{ErrorCode as e}from"@ethersproject/logger";import{PrivyConnectorError as t,PrivyError as s}from"../errors.mjs";import{n as r}from"../errors-9ucGZPEs.mjs";import"ofetch";class a extends t{constructor(){super("Wallet timeout"),this.type="wallet_error"}}class o extends t{constructor(){super("User rejected connection"),this.type="wallet_error"}}const n=s=>{if(s instanceof t)return s;if(s?.code&&s?.reason){let t=new l(s);return s.code===e.ACTION_REJECTED&&(t.details=r.E4001_USER_REJECTED_REQUEST),t}return s?.code?new l(s):new t("Unknown connector error",s)};class i extends s{constructor(e,t,s){super(e),this.type="provider_error",this.code=t,this.data=s}}class l extends i{constructor(e){super(e.message,e.code,e.data);let t=Object.values(r).find((t=>t.eipCode===e.code));this.details=t||r.UNKNOWN_ERROR,-32002===e.code&&(e.message?.includes("already pending for origin")?e.message?.includes("wallet_requestPermissions")?this.details=r.E32002_CONNECTION_ALREADY_PENDING:this.details=r.E32002_REQUEST_ALREADY_PENDING:e.message?.includes("Already processing")&&e.message.includes("eth_requestAccounts")&&(this.details=r.E32002_WALLET_LOCKED))}}const c={ERROR_USER_EXISTS:{message:"User already exists for this address",detail:"Try another address!",retryable:!1},ERROR_TIMED_OUT:{message:"Wallet request timed out",detail:"Please try connecting again.",retryable:!0},ERROR_WALLET_CONNECTION:{message:"Could not log in with wallet",detail:"Please try connecting again.",retryable:!0},ERROR_USER_REJECTED_CONNECTION:{message:"You rejected the request",detail:"Please try connecting again.",retryable:!0},ERROR_USER_LIMIT_REACHED:{message:"Unable to link",detail:"You've reached the maximum number of linked wallets.",retryable:!1},...r};export{c as ConnectorErrors,l as PrivyProviderRpcError,i as ProviderRpcError,o as UserRejectedConnectionError,a as WalletTimeoutError,n as formatConnectorError};
