import{getPrivySolanaWallet as e}from"../client/user.mjs";import{PrivyClientError as t}from"../errors.mjs";import{usePrivyInternal as a}from"./internal-context.mjs";import{usePrivyContext as r}from"./privy-context.mjs";import{useWallets as l}from"./useWallets.mjs";import"@ethersproject/address";import"ofetch";import"react";import"./index.mjs";const o=()=>{let{embeddedSolanaWallet:o,exportSolanaWallet:s,createEmbeddedSolanaWallet:m,solanaWallets:n,delegateWallet:d}=a(),{ready:i}=l(),{user:c}=r();return{ready:i,createWallet:m,exportWallet:s,delegateWalletAction:async()=>{let a=e(c);if(!a)throw new t("User must have a solana wallet in order to delegate actions");return await d({address:a.address,chainType:"solana"})},wallets:n.concat(o?[o]:[])}};export{o as useSolanaWallets};
