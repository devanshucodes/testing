import{ModalScreen as e}from"../../../screens/index.mjs";import{triggerPopup as a}from"../../popup/triggerPopup.mjs";import{toCoinbaseBlockchainFromChainId as s}from"./toCoinbaseBlockchainFromChainId.mjs";import"../../../connectors/chains/arbitrum.mjs";import"../../../connectors/chains/base.mjs";import"../../../connectors/chains/mainnet.mjs";import"../../../connectors/chains/optimism.mjs";import"../../../connectors/chains/polygon.mjs";import"../../../errors.mjs";import"ofetch";let t={buy:"CARD",send:"CRYPTO_ACCOUNT"},n={USDC:"2b92315d-eab7-5bef-84fa-089a131333f5",ETH:"d85dce9b-5b73-5c3c-8978-522ce1d1c1b4",BTC:"5b71fc48-3dd3-540c-809b-f8c94d0e68b5",SOL:"4f039497-3af8-5bb3-951c-6df9afa9be1c",POL:"026bcc1e-9163-591c-a709-34dd18b2e7a1"};function r({input:e,amount:a,blockchain:s,asset:r,experience:i}){let o=new URL("https://pay.coinbase.com/buy/select-asset");return o.searchParams.set("appId",e.app_id),o.searchParams.set("sessionToken",e.session_token),o.searchParams.set("defaultExperience",i),o.searchParams.set("presetCryptoAmount",a.startsWith(".")?`0${a}`:a),o.searchParams.set("defaultNetwork",s),o.searchParams.set("defaultPaymentMethod",t[i]),o.searchParams.set("defaultAsset",n[r]),o.searchParams.set("partnerUserId",e.partner_user_id),{url:o}}const i=(t,n,i,o,c,m)=>new Promise((async(p,d)=>{let u=a();if(!u)return void d(Error("Unable to initialize flow"));let h="ethereum"===n.chainType?s(n.chain.id):"solana",b=n.isUSDC?"USDC":"ethereum"===n.chainType?"ETH":"SOL",l=await t.initCoinbaseOnRamp({addresses:[{address:n.address,blockchains:[h]}],assets:[b]}),{url:f}=r({input:l,amount:n.amount,blockchain:h,asset:b,experience:m});u.location=f.toString();let y={...c?.funding,showAlternateFundingMethod:!0};n.usingDefaultFundingMethod&&(y.usingDefaultFundingMethod=!1),i({funding:y,coinbaseOnrampStatus:{popup:u}}),o(e.COINBASE_ONRAMP_STATUS_SCREEN),t.createAnalyticsEvent({eventName:"sdk_fiat_on_ramp_started",payload:{provider:"buy"===m?"coinbase-onramp":"coinbase-exchange",value:n.amount,chainType:n.chainType,chainId:"ethereum"===n.chainType?n.chain.id:n.cluster.name}}),setTimeout((()=>{i({funding:y,coinbaseOnrampStatus:{partnerUserId:l.partner_user_id,popup:u}})}),5e3),p()}));export{i as triggerCoinbaseFlow};
