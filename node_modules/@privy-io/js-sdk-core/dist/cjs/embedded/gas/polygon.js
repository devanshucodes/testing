"use strict";var e=require("@ethersproject/units"),o=require("fetch-retry"),t=require("../../chains/polygon.js"),a=require("../../chains/polygonAmoy.js"),r=require("../../chains/polygonMumbai.js");const s=o(fetch,{retries:3,retryDelay:500}),i=e=>[t.polygon.id,r.polygonMumbai.id,a.polygonAmoy.id].includes(e),n=o=>({maxPriorityFee:e.parseUnits(o.maxPriorityFee.toFixed(9),"gwei").toHexString(),maxFee:e.parseUnits(o.maxFee.toFixed(9),"gwei").toHexString()}),y=async e=>{let o="";switch(e){case t.polygon.id:o="https://gasstation.polygon.technology/v2";break;case r.polygonMumbai.id:o="https://gasstation-testnet.polygon.technology/v2";break;case a.polygonAmoy.id:o="https://gasstation.polygon.technology/amoy";break;default:throw Error(`chainId ${e} does not support polygon gas stations`)}const i=await s(o),y=await i.json();if(i.status>399)throw y;return{safeLow:n((g=y).safeLow),standard:n(g.standard),fast:n(g.fast)};var g};exports.defaultGasForPolygon=async function(e){if(!i(e.chainId))throw new Error("Invalid chain ID for Polygon gas estimation.");if(void 0===e.type&&(e.type=2),e.maxPriorityFeePerGas&&e.maxFeePerGas)return e;try{const{standard:o}=await y(e.chainId);e.maxPriorityFeePerGas||(e.maxPriorityFeePerGas=o.maxPriorityFee),e.maxFeePerGas||(e.maxFeePerGas=o.maxFee),e.gasPrice&&(console.warn("`gasPrice` is not supported on this chain and will be ignored. Use `maxPriorityFeePerGas` and/or `maxFeePerGas` instead."),delete e.gasPrice)}catch(e){throw new Error(`Failed to set gas prices from Polygon gas station with error: ${e}.`)}return e},exports.getPolygonGasStationFees=y,exports.isPolygon=i;
