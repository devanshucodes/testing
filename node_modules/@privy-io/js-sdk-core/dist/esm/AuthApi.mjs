import{Logout as r}from"@privy-io/public-api";import t from"./CustomProviderApi.mjs";import i from"./EmailApi.mjs";import s from"./FarcasterApi.mjs";import e from"./FarcasterV2Api.mjs";import a from"./GuestApi.mjs";import o from"./OAuthApi.mjs";import n from"./PasskeyApi.mjs";import p from"./PhoneApi.mjs";import m from"./SiweApi.mjs";import l from"./SmartWalletApi.mjs";import"./Error.mjs";import"./pkce.mjs";import"jose";class h{_privyInternal;customProvider;phone;email;oauth;siwe;smartWallet;passkey;farcaster;farcasterV2;guest;constructor(r,h,y){this._privyInternal=r,this.customProvider=new t(this._privyInternal),this.phone=new p(this._privyInternal),this.email=new i(this._privyInternal),this.oauth=new o(this._privyInternal,h,y),this.guest=new a(this._privyInternal),this.siwe=new m(this._privyInternal),this.smartWallet=new l(this._privyInternal),this.passkey=new n(this._privyInternal),this.farcaster=new s(this._privyInternal),this.farcasterV2=new e(this._privyInternal)}async logout(){try{const t=await this._privyInternal.session.getRefreshToken()??void 0;await this._privyInternal.fetch(r,{body:{refresh_token:t}})}catch(r){console.warn("Error destroying session")}await Promise.all([this._privyInternal.session.destroyLocalState({reason:"logout"}),this._privyInternal.destroyClientAnalyticsId()]),this._privyInternal.callbacks?.setUser?.(null)}}export{h as default};
