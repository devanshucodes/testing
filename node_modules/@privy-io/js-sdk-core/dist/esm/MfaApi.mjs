import{PrivyClientError as e}from"./Error.mjs";import t from"./MfaPasskeyApi.mjs";import r from"./MfaSmsApi.mjs";import"@privy-io/public-api";class i{privyInternal;proxy;sms;passkey;constructor(e,i){this.proxy=i,this.privyInternal=e,this.sms=new r(e),this.passkey=new t(e)}setProxy(e){this.proxy=e}async getAccessToken(){const t=await this.privyInternal.getAccessToken();if(!t)throw new e({error:"Missing access token",code:"attempted_rpc_call_before_logged_in"});return t}async verifyMfa(){if(!this.proxy)throw new e({error:"Embedded wallet proxy not initialized",code:"embedded_wallet_webview_not_loaded"});return await this.proxy.verifyMfa({accessToken:await this.getAccessToken()})}async initEnrollMfa(t){if(!this.proxy)throw new e({error:"Embedded wallet proxy not initialized",code:"embedded_wallet_webview_not_loaded"});return await this.proxy.initEnrollMfa({...t,accessToken:await this.getAccessToken()})}async submitEnrollMfa(t){if(!this.proxy)throw new e({error:"Embedded wallet proxy not initialized",code:"embedded_wallet_webview_not_loaded"});const r=await this.proxy.submitEnrollMfa({...t,accessToken:await this.getAccessToken()});return await this.privyInternal.refreshSession(),r}async unenrollMfa(t){if(!this.proxy)throw new e({error:"Embedded wallet proxy not initialized",code:"embedded_wallet_webview_not_loaded"});const r=await this.proxy.unenrollMfa({method:t,accessToken:await this.getAccessToken()});return await this.privyInternal.refreshSession(),r}async clearMfa(t){if(!this.proxy)throw new e({error:"Embedded wallet proxy not initialized",code:"embedded_wallet_webview_not_loaded"});return await this.proxy.clearMfa(t)}}export{i as default};
