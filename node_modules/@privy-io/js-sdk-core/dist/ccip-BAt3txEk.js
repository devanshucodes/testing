"use strict";var e=require("./smart-wallets-DeWOp4-z.js");require("permissionless"),require("viem"),require("@privy-io/public-api");class r extends e.BaseError{constructor({callbackSelector:r,cause:t,data:a,extraData:s,sender:o,urls:n}){super(t.shortMessage||"An error occurred while fetching for an offchain result.",{cause:t,metaMessages:[...t.metaMessages||[],t.metaMessages?.length?"":[],"Offchain Gateway Call:",n&&["  Gateway URL(s):",...n.map((r=>`    ${e.getUrl(r)}`))],`  Sender: ${o}`,`  Data: ${a}`,`  Callback selector: ${r}`,`  Extra data: ${s}`].flat(),name:"OffchainLookupError"})}}class t extends e.BaseError{constructor({result:r,url:t}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${e.getUrl(t)}`,`Response: ${e.stringify(r)}`],name:"OffchainLookupResponseMalformedError"})}}class a extends e.BaseError{constructor({sender:e,to:r}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${r}`,`OffchainLookup sender address: ${e}`],name:"OffchainLookupSenderMismatchError"})}}const s={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function o({data:r,sender:a,urls:s}){let o=new Error("An unknown error occurred.");for(let n=0;n<s.length;n++){const c=s[n],d=c.includes("{data}")?"GET":"POST",i="POST"===d?{data:r,sender:a}:void 0,u="POST"===d?{"Content-Type":"application/json"}:{};try{const s=await fetch(c.replace("{sender}",a).replace("{data}",r),{body:JSON.stringify(i),headers:u,method:d});let n;if(n=s.headers.get("Content-Type")?.startsWith("application/json")?(await s.json()).data:await s.text(),!s.ok){o=new e.HttpRequestError({body:i,details:n?.error?e.stringify(n.error):s.statusText,headers:s.headers,status:s.status,url:c});continue}if(!e.isHex(n)){o=new t({result:n,url:c});continue}return n}catch(r){o=new e.HttpRequestError({body:i,details:r.message,url:c})}}throw o}exports.ccipRequest=o,exports.offchainLookup=async function(t,{blockNumber:n,blockTag:c,data:d,to:i}){const{args:u}=e.decodeErrorResult({data:d,abi:[s]}),[l,p,f,h,y]=u,{ccipRead:m}=t,w=m&&"function"==typeof m?.request?m.request:o;try{if(!function(r,t){if(!e.isAddress(r,{strict:!1}))throw new e.InvalidAddressError({address:r});if(!e.isAddress(t,{strict:!1}))throw new e.InvalidAddressError({address:t});return r.toLowerCase()===t.toLowerCase()}(i,l))throw new a({sender:l,to:i});const r=await w({data:f,sender:l,urls:p}),{data:s}=await e.call(t,{blockNumber:n,blockTag:c,data:e.concat([h,e.encodeAbiParameters([{type:"bytes"},{type:"bytes"}],[r,y])]),to:i});return s}catch(e){throw new r({callbackSelector:h,cause:e,data:d,extraData:y,sender:l,urls:p})}},exports.offchainLookupAbiItem=s,exports.offchainLookupSignature="0x556f1830";
